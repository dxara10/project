# .github/workflows/executar-testes.yml

name: Executar Testes Automatizados (Robot Framework)

# Gatilhos: Quando este workflow deve rodar?
on:
  # 1. Ao fazer push para o branch principal (garante que o main está sempre ok)
  push:
    branches: [ main ]

  # 2. Ao abrir um Pull Request para o branch main (valida o código ANTES de mergear)
  pull_request:
    branches: [ main ]

  # 3. Permite rodar manualmente pela aba "Actions" do GitHub
  workflow_dispatch:

jobs:
  # Nosso único job será executar os testes
  executar-testes:
    name: Rodar Suíte de Testes Robot
    # Usar uma máquina virtual Ubuntu fornecida pelo GitHub
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Baixar o código do seu repositório para a máquina virtual
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 2: Configurar o ambiente Python
      - name: Configurar Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      # Passo 3: Instalar as dependências (Robot, Selenium, etc.)
      - name: Instalar Node.js (necessário para rfbrowser)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependências Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install robotframework-browser robotframework-requests Faker

      # Passo 4: Instalar navegadores do rfbrowser
      - name: Instalar navegadores do rfbrowser
        run: |
          rfbrowser init

      # Passo 5: EXECUTAR OS TESTES!
      # Passamos os segredos como variáveis para o Robot
      - name: Executar testes Robot Framework
        env:
          TARGET_URL: ${{ secrets.TARGET_APP_URL }}
          USER_LOGIN: ${{ secrets.TEST_USER_LOGIN }}
          USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: |
          mkdir -p results
          robot --variable TARGET_URL:$TARGET_URL \
                --variable USER_LOGIN:$USER_LOGIN \
                --variable USER_PASSWORD:$USER_PASSWORD \
                -d results \
                tests/

      # Passo 6: Publicar os resultados do teste (MUITO ÚTIL!)
      # Isto permite que você baixe o log.html e report.html depois que o teste rodar
      - name: Upload dos resultados
        if: always() # Sempre executa este passo, mesmo se os testes falharem
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: results/ # A pasta onde o Robot salvou os relatórios